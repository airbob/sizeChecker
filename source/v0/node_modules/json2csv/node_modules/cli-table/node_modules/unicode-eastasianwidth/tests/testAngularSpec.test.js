// Generated by CoffeeScript 1.6.2
"use strict";describe("east-asian-width", function() {
  beforeEach(function() {
    return module("unicode_eastasianwidth");
  });
  describe("width", function() {
    return it("should counting text chars", inject(function($rootScope, $compile) {
      var input, scope;

      scope = $rootScope;
      $compile("<form name=\"form\">\n  <input name=\"text\" east-asian-width maxlength='5' type='text' ng-model=\"text\">\n</form>")(scope);
      input = scope.form.text;
      return scope.$apply(function() {
        input.$setViewValue("aaaaaa");
        expect(input.$modelValue).toBe(void 0);
        input.$setViewValue("あいう");
        expect(input.$modelValue).toBe(void 0);
        input.$setViewValue("aaaaa");
        expect(input.$modelValue).toBe("aaaaa");
        input.$setViewValue("aaaあ");
        return expect(input.$modelValue).toBe("aaaあ");
      });
    }));
  });
  describe("truncate", function() {
    beforeEach(module(function($provide) {
      $provide.value("length", "5");
    }));
    return it("should truncate text", inject(function(truncateFilter) {
      expect(truncateFilter("aaaaaa")).toEqual("aaa…");
      expect(truncateFilter("あああ")).toEqual("あ…");
      expect(truncateFilter("aaaaa")).toEqual("aaaaa");
      expect(truncateFilter("aaaあ")).toEqual("aaaあ");
      return expect(truncateFilter("")).toEqual("");
    }));
  });
  return describe("hasEm", function() {
    return it("should return hasEm", inject(function(hasEm) {
      expect(hasEm("aaああ")).toEqual(true);
      return expect(hasEm("aa")).toEqual(false);
    }));
  });
});
