{
  "name": "json2csv",
  "preferGlobal": "true",
  "version": "2.2.1",
  "description": "Convert json to csv with column titles",
  "keywords": [
    "json",
    "to",
    "csv",
    "export",
    "convert",
    "parse"
  ],
  "author": {
    "name": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com"
  },
  "bin": {
    "json2csv": "./bin/json2csv.js"
  },
  "main": "./lib/json2csv.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/zeMirco/json2csv"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter spec",
    "format": "node ./node_modules/js-beautify/js/bin/js-beautify.js lib/json2csv.js test/test.js package.json -r --config js-beautify.json"
  },
  "dependencies": {
    "commander": "~1.0.5",
    "cli-table": "~0.2.0",
    "async": "~0.2.9"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "should": "~2.0.2",
    "async": "~0.2.9",
    "js-beautify": "~1.4.2"
  },
  "readme": "# Convert json to csv\n\nConverts json into csv with column titles and proper line endings. Can be used as a module and from the command line.\n\n[![Build Status](https://travis-ci.org/zeMirco/json2csv.png)](https://travis-ci.org/zeMirco/json2csv)\n\n## How to use\n\nInstall\n\n```bash\n$ npm install json2csv\n```\n\nInclude the module and run\n\n```javascript\nvar json2csv = require('json2csv');\n    \njson2csv({data: someJSONData, fields: ['field1', 'field2', 'field3']}, function(err, csv) {\n  if (err) console.log(err);\n  console.log(csv);\n});\n```\n\n## Features\n\n- Uses proper line endings on various operating systems\n- Handles double quotes\n- Allows custom column selection\n- Reads column selection from file\n- Pretty writing to stdout\n- Supports optional custom delimiters\n- Not create CSV column title by passing hasCSVColumnTitle: false, into params.\n- If field is not exist in object then the field value in CSV will be empty. \n    \n## Use as a module\n\n### Example 1\n\n```javascript\nvar json2csv = require('json2csv');\n\nvar json = [\n  {\n    \"car\": \"Audi\",\n    \"price\": 40000,\n    \"color\": \"blue\"\n  }, {\n    \"car\": \"BMW\",\n    \"price\": 35000,\n    \"color\": \"black\"\n  }, {\n    \"car\": \"Porsche\",\n    \"price\": 60000,\n    \"color\": \"green\"\n  }\n];\n\njson2csv({data: json, fields: ['car', 'price', 'color']}, function(err, csv) {\n  if (err) console.log(err);\n  fs.writeFile('file.csv', csv, function(err) {\n    if (err) throw err;\n    console.log('file saved');\n  });\n});\n```\n \nThe content of the \"file.csv\" should be\n\n```\ncar, price, color\n\"Audi\", 40000, \"blue\"\n\"BMW\", 35000, \"black\"\n\"Porsche\", 60000, \"green\"\n```\n\n### Example 2\n    \nSimilarly to [mongoexport](http://www.mongodb.org/display/DOCS/mongoexport) you can choose which fields to export\n\n```javascript\njson2csv({data: json, fields: ['car', 'color']}, function(err, csv) {\n  if (err) console.log(err);\n  console.log(csv);\n});\n```\n\nResults in\n\n```\ncar, color\n\"Audi\", \"blue\"\n\"BMW\", \"black\"\n\"Porsche\", \"green\"\n```\n\n### Example 3\n\nUse a custom delimiter to create tsv files. Add it as the value of the del property on the parameters:\n\n```javascript\njson2csv({data: json, fields: ['car', 'price', 'color'], del: '\\t'}, function(err, tsv) {\n  if (err) console.log(err);\n  console.log(tsv);\n});\n```\n \nWill output:\n\n```\ncar price color\n\"Audi\"  10000 \"blue\"\n\"BMW\" 15000 \"red\"\n\"Mercedes\"  20000 \"yellow\"\n\"Porsche\" 30000 \"green\"\n```\n\nIf no delimiter is specified, the default `,` is used\n\n### Example 4\n    \nYou can choose custom column names for the exported file.\n\n```javascript\njson2csv({data: json, fields: ['car', 'price'], fieldNames: ['Car Name', 'Price USD']}, function(err, csv) {\n  if (err) console.log(err);\n  console.log(csv);\n});\n```\n\nResults in\n\n```\n\"Car Name\", \"Price USD\"\n\"Audi\", \"blue\"\n\"BMW\", \"black\"\n\"Porsche\", \"green\"\n```\n\n\n\n## Command Line Interface\n\n`json2csv` can also be called from the command line\n\n```bash\nUsage: json2csv [options]\n\nOptions:\n\n  -h, --help              output usage information\n  -V, --version           output the version number\n  -i, --input <input>     Path and name of the incoming json file.\n  -o, --output [output]   Path and name of the resulting csv file. Defaults to console.\n  -f, --fields <fields>   Specify the fields to convert.\n  -l, --fieldList [list]  Specify a file with a list of fields to include. One field per line.\n  -d, --delimiter [delim] Specify a delimiter other than the default comma to use.\n  -p, --pretty            Use only when printing to console. Logs output in pretty tables.\n```\n      \nAn input file `-i` and fields `-f` are required. If no output `-o` is specified the result is logged to the console.\nUse `-p` to show the result in a beautiful table inside the console.\n      \n### CLI examples\n\n#### Input file and specify fields\n\n```bash\n$ json2csv -i input.json -f carModel,price,color\n```\n\n```\ncarModel,price,color\n\"Audi\",10000,\"blue\"\n\"BMW\",15000,\"red\"\n\"Mercedes\",20000,\"yellow\"\n\"Porsche\",30000,\"green\"\n```\n    \n#### Input file, specify fields and use pretty logging\n    \n```bash\n$ json2csv -i input.json -f carModel,price,color -p\n```\n    \n![Screenshot](https://s3.amazonaws.com/zeMirco/github/json2csv/json2csv-pretty.png)\n\n#### Input file, specify fields and write to file\n\n```bash\n$ json2csv -i input.json -f carModel,price,color -o out.csv\n```\n    \nContent of `out.csv` is\n\n```\ncarModel,price,color\n\"Audi\",10000,\"blue\"\n\"BMW\",15000,\"red\"\n\"Mercedes\",20000,\"yellow\"\n\"Porsche\",30000,\"green\"\n```\n    \n#### Input file, use field list and write to file\n\nThe file `fieldList` contains\n\n```\ncarModel\nprice\ncolor\n```\n    \nUse the following command with the `-l` flag\n \n```bash\n$ json2csv -i input.json -l fieldList -o out.csv\n```\n    \nContent of `out.csv` is\n\n```\ncarModel,price,color\n\"Audi\",10000,\"blue\"\n\"BMW\",15000,\"red\"\n\"Mercedes\",20000,\"yellow\"\n\"Porsche\",30000,\"green\"\n```\n\n#### Read from stdin\n\n```bash\n$ json2csv -f price\n[{\"price\":1000},{\"price\":2000}]\n```\n\nHit <kbd>Enter</kbd> and afterwards <kbd>CTRL</kbd> + <kbd>D</kbd> to end reading from stdin. The terminal should show\n\n```\nprice\n1000\n2000\n```\n\n## Testing\n\nRequires mocha, should and async.\n\nRun\n\n```bash\n$ make test\n```\n\nor\n\n```bash\n$ npm test\n```\n\n## Formatting json2csv\n\nRequires js-beautify.\n\nRun\n\n```bash\n$ make format\n```\n\nor\n\n```bash\n$ npm run-script format\n```\n\n## Contributors\n\nInstall require packages for development run following command under json2csv dir.\n\nRun\n\n```bash\n$ npm install\n```\n\nCould you please make sure code is formatted and test passed before submit Pull Requests?\n\nSee Testing and Formatting json2csv above.\n    \n## But I want streams!\n\nCheck out my other module [json2csv-stream](https://github.com/zeMirco/json2csv-stream). It transforms an incoming\nstream containing `json` data into an outgoing `csv` stream.\n    \n## License\n\nCopyright (C) 2012 [Mirco Zeiss](mailto: mirco.zeiss@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zeMirco/json2csv/issues"
  },
  "_id": "json2csv@2.2.1",
  "dist": {
    "shasum": "7574f2ef965cfbd8ecd46faf2c270090d275bfe6"
  },
  "_from": "json2csv@2.2.1",
  "_resolved": "https://registry.npmjs.org/json2csv/-/json2csv-2.2.1.tgz"
}
